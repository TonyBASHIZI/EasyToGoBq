<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        G7H/OPLy/gH5CVxZqWET6AAAAABJRU5ErkJggg==
</value>
  </data>
</root>